{"ast":null,"code":"var _jsxFileName = \"/Users/kellyle/Desktop/Dojo_Assignments/MERN/Neighbourly-1-main/Neighbourly/client/src/components/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { FormControl, InputLabel, OutlinedInput, Checkbox, Select, TextField } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst styles = {\n  paper: {\n    width: \"12rem\",\n    padding: \"1rem\",\n    display: \"inline-block\",\n    verticalAlign: 'text-top'\n  },\n  input: {\n    marginBottom: \"1rem\"\n  },\n  button: {\n    width: \"50%\"\n  }\n};\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  }\n});\n\nconst Chat = () => {\n  _s();\n\n  const classes = useStyles(); // const bull = <span className={classes.bullet}>â€¢</span>;\n\n  const [socket] = useState(() => io(':8000'));\n  const [message, setMessage] = useState('');\n  const [typingStatus, setTypingStatus] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [room, setRoom] = useState('');\n  const [user, setUser] = useState('');\n  useEffect(() => {\n    return () => socket.disconnect(true);\n  }, []);\n  socket.on('messageSent', data => {\n    setMessages([...messages, data]);\n    setTypingStatus('');\n  });\n  socket.on('clientTyping', data => {\n    setTypingStatus(data.message);\n  });\n\n  const submitHandler = e => {\n    e.preventDefault();\n    socket.emit('sendMessage', {\n      room,\n      user,\n      message\n    });\n    setMessages([...messages, {\n      room,\n      user,\n      message\n    }]);\n    setTypingStatus('');\n    setMessage('');\n  };\n\n  const typingHandler = e => {\n    setMessage(e.target.value);\n    socket.emit('clientTyping', {\n      room,\n      message: `${user} is typing...`\n    });\n  };\n\n  const joinRoom = () => {\n    socket.emit('joinroom', room);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: classes.root,\n      variant: \"outlined\",\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.title,\n          color: \"textSecondary\",\n          gutterBottom: true,\n          children: typingStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this), messages.map((item, i) => {\n          /*#__PURE__*/\n          _jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.pos,\n              color: \"textSecondary\",\n              children: [item.username, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              component: \"p\",\n              children: item.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 25\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        elevation: 1,\n        style: styles.paper\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      variant: \"outlined\",\n      onSubmit: submitHandler,\n      style: styles.input,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"Message\",\n        variant: \"outlined\",\n        type: \"text\",\n        name: \"message\",\n        onChange: typingHandler,\n        value: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((item, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [item.username, \": \", item.message]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"user\",\n        onChange: e => setUser(e.target.value),\n        placeholder: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"room\",\n        placeholder: \"roomname\",\n        onChange: e => setRoom(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: joinRoom,\n        children: \"Join Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: messages.map((item, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [item.user, \": \", item.message]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: typingStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"message\",\n          onChange: typingHandler,\n          value: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Chat, \"URee1RiJzHWpCUWDfGWkg5bJmSU=\", false, function () {\n  return [useStyles];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/kellyle/Desktop/Dojo_Assignments/MERN/Neighbourly-1-main/Neighbourly/client/src/components/Chat.js"],"names":["React","useState","useEffect","io","makeStyles","Card","CardActions","CardContent","Button","Typography","FormControl","InputLabel","OutlinedInput","Checkbox","Select","TextField","styles","paper","width","padding","display","verticalAlign","input","marginBottom","button","useStyles","root","minWidth","bullet","margin","transform","title","fontSize","pos","Chat","classes","socket","message","setMessage","typingStatus","setTypingStatus","messages","setMessages","room","setRoom","user","setUser","disconnect","on","data","submitHandler","e","preventDefault","emit","typingHandler","target","value","joinRoom","map","item","i","username"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport {\n    FormControl,\n    InputLabel,\n    OutlinedInput,\n    Checkbox,\n    Select,\n    TextField\n} from '@material-ui/core';\n\nconst styles = {\n    paper: {\n        width: \"12rem\", padding: \"1rem\", display: \"inline-block\", verticalAlign: 'text-top'\n    },\n    input: {\n        marginBottom: \"1rem\"\n    },\n    button: {\n        width: \"50%\"\n    }\n}\n\nconst useStyles = makeStyles({\n    root: {\n      minWidth: 275,\n    },\n    bullet: {\n      display: 'inline-block',\n      margin: '0 2px',\n      transform: 'scale(0.8)',\n    },\n    title: {\n      fontSize: 14,\n    },\n    pos: {\n      marginBottom: 12,\n    },\n  });\n\nconst Chat = () => {\n    const classes = useStyles();\n    // const bull = <span className={classes.bullet}>â€¢</span>;\n    const [socket] = useState(() => io(':8000'));\n    const [message, setMessage] = useState('');\n    const [typingStatus, setTypingStatus] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [room, setRoom] = useState('');\n    const [user, setUser] = useState('');\n  \n    useEffect(() => {\n      return () => socket.disconnect(true);\n    }, [])\n  \n    socket.on('messageSent', data => {\n      setMessages([...messages, data]);\n      setTypingStatus('');\n    })\n  \n    socket.on('clientTyping', data => {\n      setTypingStatus(data.message);\n    })\n  \n    const submitHandler = e => {\n      e.preventDefault();\n  \n      socket.emit('sendMessage', { room, user, message });\n      setMessages([...messages, { room, user, message }])\n      setTypingStatus('');\n      setMessage('');\n    }\n  \n    const typingHandler = e => {\n      setMessage(e.target.value);\n      socket.emit('clientTyping', { room, message: `${user} is typing...`});\n    }\n  \n    const joinRoom = () => {\n      socket.emit('joinroom', room);\n    }\n    return (\n        <>\n        <Card className={classes.root} variant=\"outlined\">\n            <CardContent>\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                {typingStatus}\n                </Typography>\n                {\n                    messages.map( (item, i) => { \n                    <div key={i}>\n                        <Typography className={classes.pos} color=\"textSecondary\">\n                        {item.username}:\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"p\">{item.message}</Typography>\n                    </div>\n                    })\n                }\n                {/* <Typography variant=\"body2\" component=\"p\">\n                well meaning and kindly.\n                <br />\n                {'\"a benevolent smile\"'}\n                </Typography> */}\n            </CardContent>\n        <CardActions>\n        </CardActions>\n        <div elevation={1} style={styles.paper}>\n        </div>\n    </Card>\n        <FormControl variant=\"outlined\" onSubmit={ submitHandler} style={styles.input}>\n                <TextField id=\"outlined-basic\" label=\"Message\" variant=\"outlined\" type=\"text\" name=\"message\" onChange={typingHandler} value={message}/>\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                    Send\n                </Button>\n        </FormControl>\n            {/* <input type=\"text\" name=\"username\" onChange={e => setUsername(e.target.value) } placeholder=\"username\"/>\n            <form onSubmit={ submitHandler }>\n                <p>{typingStatus}</p>\n                <input type=\"text\" name=\"message\" onChange={ typingHandler } value={ message }/>\n                <input type=\"submit\" value=\"Send\"/>\n            </form> */}\n            <div>\n                {\n                    messages.map( (item, i) => \n                        <p key={i}>{item.username}: {item.message}</p>\n                    )\n                }\n            </div>\n            <div>\n            <input type=\"text\" name=\"user\" onChange={e => setUser(e.target.value) } placeholder=\"username\"/>\n            <input type=\"text\" name=\"room\" placeholder=\"roomname\" onChange={ e => setRoom(e.target.value) }/>\n            <button onClick={ joinRoom }>Join Room</button>\n            <div>\n                {\n                messages.map( (item, i) => \n                    <p key={i}>{item.user}: {item.message}</p>\n                )\n                }\n            </div>\n            <form onSubmit={submitHandler}>\n                <p>{typingStatus}</p>\n                <input type=\"text\" name=\"message\" onChange={ typingHandler } value={message}/>\n                <br/>\n                <input type=\"submit\" value=\"Submit\"/>\n            </form> \n        </div>\n        </>\n    );\n}\n\nexport default Chat"]},"metadata":{},"sourceType":"module"}