{"ast":null,"code":"var _jsxFileName = \"/Users/kellyle/Desktop/Dojo_Assignments/MERN/Neighbourly-1-main/Neighbourly/client/src/components/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  }\n});\n\nconst Chat = () => {\n  _s();\n\n  const classes = useStyles();\n\n  const bull = /*#__PURE__*/_jsxDEV(\"span\", {\n    className: classes.bullet,\n    children: \"\\u2022\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 18\n  }, this);\n\n  const [socket] = useState(() => io(':8000'));\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [typingStatus, setTypingStatus] = useState('');\n  useEffect(() => {\n    return () => socket.disconnect(true);\n  }, []);\n  socket.on('messageSent', data => {\n    setMessages([...messages, data]);\n    setTypingStatus('');\n  });\n  socket.on('clientTyping', data => {\n    setTypingStatus(data.message);\n  });\n\n  const submitHandler = e => {\n    e.preventDefault();\n    socket.emit('sendMessage', {\n      username,\n      message\n    });\n    setTypingStatus('');\n    setMessage('');\n  };\n\n  const typingHandler = e => {\n    setMessage(e.target.value);\n    socket.emit('clientTyping', {\n      message: `${username} is typing...`\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: classes.root,\n      variant: \"outlined\",\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.title,\n          color: \"textSecondary\",\n          gutterBottom: true,\n          children: \"Word of the Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h2\",\n          children: [\"be\", bull, \"nev\", bull, \"o\", bull, \"lent\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.pos,\n          color: \"textSecondary\",\n          children: \"adjective\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          component: \"p\",\n          children: [\"well meaning and kindly.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), '\"a benevolent smile\"']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: typingStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"message\",\n            onChange: typingHandler,\n            value: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      onChange: e => setUsername(e.target.value),\n      placeholder: \"username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: typingStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"message\",\n        onChange: typingHandler,\n        value: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((item, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [item.username, \": \", item.message]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Chat, \"aSaCaAX1p56wc1p6ZOAepso6eic=\", false, function () {\n  return [useStyles];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/kellyle/Desktop/Dojo_Assignments/MERN/Neighbourly-1-main/Neighbourly/client/src/components/Chat.js"],"names":["React","useState","useEffect","io","makeStyles","Card","CardActions","CardContent","Button","Typography","useStyles","root","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","Chat","classes","bull","socket","messages","setMessages","message","setMessage","username","setUsername","typingStatus","setTypingStatus","disconnect","on","data","submitHandler","e","preventDefault","emit","typingHandler","target","value","map","item","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n    root: {\n      minWidth: 275,\n    },\n    bullet: {\n      display: 'inline-block',\n      margin: '0 2px',\n      transform: 'scale(0.8)',\n    },\n    title: {\n      fontSize: 14,\n    },\n    pos: {\n      marginBottom: 12,\n    },\n  });\n\nconst Chat = () => {\n    const classes = useStyles();\n    const bull = <span className={classes.bullet}>•</span>;\n    const [socket] = useState(() => io(':8000'))\n    const [messages, setMessages] = useState([]);\n    const [message, setMessage] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [typingStatus, setTypingStatus] = useState('');\n\n    useEffect(() => {\n        return () => socket.disconnect(true);\n    }, []);\n\n    socket.on('messageSent', data => {\n        setMessages([...messages, data]);\n        setTypingStatus('');\n    })\n\n    socket.on('clientTyping', data => {\n        setTypingStatus(data.message);\n    })\n\n    const submitHandler = e => {\n        e.preventDefault();\n\n        socket.emit('sendMessage', {username, message})\n        setTypingStatus('');\n        setMessage('');\n    }\n\n    const typingHandler = e => {\n        setMessage(e.target.value);\n        socket.emit('clientTyping', {message: `${username} is typing...`})\n    }\n    return (\n        <>\n        <Card className={classes.root} variant=\"outlined\">\n            <CardContent>\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                Word of the Day\n                </Typography>\n                <Typography variant=\"h5\" component=\"h2\">\n                be{bull}nev{bull}o{bull}lent\n                </Typography>\n                <Typography className={classes.pos} color=\"textSecondary\">\n                adjective\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                well meaning and kindly.\n                <br />\n                {'\"a benevolent smile\"'}\n                </Typography>\n            </CardContent>\n        <CardActions>\n        <form onSubmit={ submitHandler }>\n                <p>{typingStatus}</p>\n                <input type=\"text\" name=\"message\" onChange={ typingHandler } value={ message }/>\n                <input type=\"submit\" value=\"Send\"/>\n            </form>\n        </CardActions>\n    </Card>\n            <input type=\"text\" name=\"username\" onChange={e => setUsername(e.target.value) } placeholder=\"username\"/>\n            <form onSubmit={ submitHandler }>\n                <p>{typingStatus}</p>\n                <input type=\"text\" name=\"message\" onChange={ typingHandler } value={ message }/>\n                <input type=\"submit\" value=\"Send\"/>\n            </form>\n            <div>\n                {\n                    messages.map( (item, i) => \n                        <p key={i}>{item.username}: {item.message}</p>\n                    )\n                }\n            </div>\n        </>\n    );\n}\n\nexport default Chat"]},"metadata":{},"sourceType":"module"}