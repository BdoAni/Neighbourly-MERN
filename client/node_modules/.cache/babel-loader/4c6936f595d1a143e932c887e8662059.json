{"ast":null,"code":"var _jsxFileName = \"/Users/kellyle/Desktop/Dojo_Assignments/MERN/Neighbourly-1-main/Neighbourly/client/src/components/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { FormControl, InputLabel, OutlinedInput, Checkbox, Select, TextField } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst styles = {\n  paper: {\n    width: \"12rem\",\n    padding: \"1rem\",\n    display: \"inline-block\",\n    verticalAlign: 'text-top'\n  },\n  input: {\n    marginBottom: \"1rem\"\n  },\n  button: {\n    width: \"50%\"\n  }\n};\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  }\n});\n\nconst Chat = props => {\n  _s();\n\n  const {\n    id\n  } = props;\n  const classes = useStyles(); // const bull = <span className={classes.bullet}>â€¢</span>;\n\n  const [socket] = useState(() => io(':8000'));\n  const [message, setMessage] = useState('');\n  const [typingStatus, setTypingStatus] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [room, setRoom] = useState('');\n  const [user, setUser] = useState('');\n  const [startChat, setStartChat] = useState(false);\n  useEffect(() => {\n    return () => socket.disconnect(true);\n  }, []);\n  socket.on('messageSent', data => {\n    setMessages([...messages, data]);\n    setTypingStatus('');\n  });\n  socket.on('clientTyping', data => {\n    setTypingStatus(data.message);\n  });\n\n  const submitHandler = e => {\n    e.preventDefault();\n    socket.emit('sendMessage', {\n      room,\n      user,\n      message\n    });\n    setMessages([...messages, {\n      room,\n      user,\n      message\n    }]);\n    setTypingStatus('');\n    setMessage('');\n  };\n\n  const typingHandler = e => {\n    setMessage(e.target.value);\n    socket.emit('clientTyping', {\n      room,\n      message: `${user} is typing...`\n    });\n  };\n\n  const joinRoom = () => {\n    setRoom(id);\n    socket.emit('joinroom', room);\n    setStartChat(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: startChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        className: classes.root,\n        variant: \"outlined\",\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.title,\n            color: \"textSecondary\",\n            gutterBottom: true,\n            children: typingStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: messages.map((item, i) => /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              component: \"p\",\n              children: [user, \": \", item.message]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          elevation: 1,\n          style: styles.paper\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"outlined\",\n          onSubmit: submitHandler,\n          style: styles.input,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-basic\",\n            label: \"Message\",\n            variant: \"outlined\",\n            type: \"text\",\n            name: \"message\",\n            onChange: typingHandler,\n            value: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(FormControl, {\n      children: [/*#__PURE__*/_jsxDEV(OutlinedInput, {\n        type: \"text\",\n        name: \"user\",\n        onChange: e => setUser(e.target.value),\n        placeholder: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: joinRoom,\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Start Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Chat, \"P5KSESycLsS/tMHUA40k6YwKpfw=\", false, function () {\n  return [useStyles];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/kellyle/Desktop/Dojo_Assignments/MERN/Neighbourly-1-main/Neighbourly/client/src/components/Chat.js"],"names":["React","useState","useEffect","io","makeStyles","Card","CardActions","CardContent","Button","Typography","FormControl","InputLabel","OutlinedInput","Checkbox","Select","TextField","styles","paper","width","padding","display","verticalAlign","input","marginBottom","button","useStyles","root","minWidth","bullet","margin","transform","title","fontSize","pos","Chat","props","id","classes","socket","message","setMessage","typingStatus","setTypingStatus","messages","setMessages","room","setRoom","user","setUser","startChat","setStartChat","disconnect","on","data","submitHandler","e","preventDefault","emit","typingHandler","target","value","joinRoom","map","item","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport {\n    FormControl,\n    InputLabel,\n    OutlinedInput,\n    Checkbox,\n    Select,\n    TextField\n} from '@material-ui/core';\n\nconst styles = {\n    paper: {\n        width: \"12rem\", padding: \"1rem\", display: \"inline-block\", verticalAlign: 'text-top'\n    },\n    input: {\n        marginBottom: \"1rem\"\n    },\n    button: {\n        width: \"50%\"\n    }\n}\n\nconst useStyles = makeStyles({\n    root: {\n      minWidth: 275,\n    },\n    bullet: {\n      display: 'inline-block',\n      margin: '0 2px',\n      transform: 'scale(0.8)',\n    },\n    title: {\n      fontSize: 14,\n    },\n    pos: {\n      marginBottom: 12,\n    },\n  });\n\nconst Chat = props => {\n    const { id } = props;\n    const classes = useStyles();\n    // const bull = <span className={classes.bullet}>â€¢</span>;\n    const [socket] = useState(() => io(':8000'));\n    const [message, setMessage] = useState('');\n    const [typingStatus, setTypingStatus] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [room, setRoom] = useState('');\n    const [user, setUser] = useState('');\n    const [startChat, setStartChat] = useState(false);\n\n    useEffect(() => {\n        return () => socket.disconnect(true);\n    }, [])\n  \n    socket.on('messageSent', data => {\n      setMessages([...messages, data]);\n      setTypingStatus('');\n    })\n  \n    socket.on('clientTyping', data => {\n      setTypingStatus(data.message);\n    })\n  \n    const submitHandler = e => {\n      e.preventDefault();\n      \n      socket.emit('sendMessage', { room, user, message });\n      setMessages([...messages, { room, user, message }])\n      setTypingStatus('');\n      setMessage('');\n    }\n  \n    const typingHandler = e => {\n      setMessage(e.target.value);\n      socket.emit('clientTyping', { room, message: `${user} is typing...`});\n    }\n  \n    const joinRoom = () => {\n        setRoom(id);\n        socket.emit('joinroom', room);\n        setStartChat(true);\n    }\n    return (\n        <>\n        {startChat ? \n        <>\n        <Card className={classes.root} variant=\"outlined\">\n            <CardContent>\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                {typingStatus}\n                </Typography>\n                <div>\n                {\n                    messages.map( (item, i) => \n                    <Typography variant=\"body2\" component=\"p\" key={i}>{user}: {item.message}</Typography>\n                    )\n                }\n            </div>\n                {/* {\n                    messages.map( (item, i) => { \n                        <div key={i}>\n                        <Typography className={classes.pos} color=\"textSecondary\">\n                        {item.username}:\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"p\">{item.message}</Typography>\n                        </div>\n                    })\n                } */}\n            </CardContent>\n        <CardActions>\n        </CardActions>\n        <div elevation={1} style={styles.paper}>\n        </div>\n    </Card>\n        <form onSubmit={submitHandler}>\n            <FormControl variant=\"outlined\" onSubmit={ submitHandler} style={styles.input}>\n                <TextField id=\"outlined-basic\" label=\"Message\" variant=\"outlined\" type=\"text\" name=\"message\" onChange={typingHandler} value={message}/>\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                    Send\n                </Button>\n            </FormControl>\n        </form>\n        </>\n        :\n        <FormControl>\n            <OutlinedInput type=\"text\" name=\"user\" onChange={e => setUser(e.target.value) } placeholder=\"username\"/>\n            <Button onClick={ joinRoom } variant=\"contained\" color=\"primary\">\n                        Start Chat\n            </Button>\n        </FormControl>\n        }\n        {/* <input type=\"text\" name=\"username\" onChange={e => setUsername(e.target.value) } placeholder=\"username\"/>\n        <form onSubmit={ submitHandler }>\n        <p>{typingStatus}</p>\n                <input type=\"text\" name=\"message\" onChange={ typingHandler } value={ message }/>\n                <input type=\"submit\" value=\"Send\"/>\n            </form> */}\n            {/* <div>\n                {\n                    messages.map( (item, i) => \n                        <p key={i}>{item.username}: {item.message}</p>\n                    )\n                }\n            </div> */}\n            {/* <div>\n            <input type=\"text\" name=\"user\" onChange={e => setUser(e.target.value) } placeholder=\"username\"/>\n            <input type=\"text\" name=\"room\" placeholder=\"roomname\" onChange={ e => setRoom(e.target.value) }/>\n            <button onClick={ joinRoom }>Join Room</button>\n\n            <form onSubmit={submitHandler}>\n                <p>{typingStatus}</p>\n                <input type=\"text\" name=\"message\" onChange={ typingHandler } value={message}/>\n                <br/>\n                <input type=\"submit\" value=\"Submit\"/>\n            </form> \n        </div> */}\n        </>\n    );\n}\n\nexport default Chat"]},"metadata":{},"sourceType":"module"}