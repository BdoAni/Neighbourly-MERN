{"ast":null,"code":"var _jsxFileName = \"/Users/kellyle/Desktop/Dojo_Assignments/MERN/Neighbourly-1-main/Neighbourly/client/src/components/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Chat = () => {\n  _s();\n\n  const [socket] = useState(() => io(':8000'));\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [typingStatus, setTypingStatus] = useState('');\n  useEffect(() => {\n    return () => socket.disconnect(true);\n  }, []);\n  socket.on('messageSent', data => {\n    setMessages([...messages, data]);\n    setTypingStatus('');\n  });\n  socket.on('clientTyping', data => {\n    setTypingStatus(data.message);\n  });\n\n  const submitHandler = e => {\n    e.preventDefault();\n    socket.emit('sendMessage', {\n      username,\n      message\n    });\n    setTypingStatus('');\n    setMessage('');\n  };\n\n  const typingHandler = e => {\n    setMessage(e.target.value);\n    socket.emit('clientTyping', {\n      message: `${username} is typing...`\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      onChange: e => setUsername(e.target.value),\n      placeholder: \"username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: typingStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"message\",\n        onChange: typingHandler,\n        value: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((item, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [item.username, \": \", item.message]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Chat, \"/+TXnFa7ToNp6XLbFo1EqIy13v8=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/kellyle/Desktop/Dojo_Assignments/MERN/Neighbourly-1-main/Neighbourly/client/src/components/Chat.js"],"names":["React","useState","useEffect","io","Chat","socket","messages","setMessages","message","setMessage","username","setUsername","typingStatus","setTypingStatus","disconnect","on","data","submitHandler","e","preventDefault","emit","typingHandler","target","value","map","item","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,EAAP,MAAe,kBAAf;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM,CAACC,MAAD,IAAWJ,QAAQ,CAAC,MAAME,EAAE,CAAC,OAAD,CAAT,CAAzB;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,WAAO,MAAMG,MAAM,CAACS,UAAP,CAAkB,IAAlB,CAAb;AACH,GAFQ,EAEN,EAFM,CAAT;AAIAT,EAAAA,MAAM,CAACU,EAAP,CAAU,aAAV,EAAyBC,IAAI,IAAI;AAC7BT,IAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcU,IAAd,CAAD,CAAX;AACAH,IAAAA,eAAe,CAAC,EAAD,CAAf;AACH,GAHD;AAKAR,EAAAA,MAAM,CAACU,EAAP,CAAU,cAAV,EAA0BC,IAAI,IAAI;AAC9BH,IAAAA,eAAe,CAACG,IAAI,CAACR,OAAN,CAAf;AACH,GAFD;;AAIA,QAAMS,aAAa,GAAGC,CAAC,IAAI;AACvBA,IAAAA,CAAC,CAACC,cAAF;AAEAd,IAAAA,MAAM,CAACe,IAAP,CAAY,aAAZ,EAA2B;AAACV,MAAAA,QAAD;AAAWF,MAAAA;AAAX,KAA3B;AACAK,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAJ,IAAAA,UAAU,CAAC,EAAD,CAAV;AACH,GAND;;AAQA,QAAMY,aAAa,GAAGH,CAAC,IAAI;AACvBT,IAAAA,UAAU,CAACS,CAAC,CAACI,MAAF,CAASC,KAAV,CAAV;AACAlB,IAAAA,MAAM,CAACe,IAAP,CAAY,cAAZ,EAA4B;AAACZ,MAAAA,OAAO,EAAG,GAAEE,QAAS;AAAtB,KAA5B;AACH,GAHD;;AAIA,sBACI;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,UAAxB;AAAmC,MAAA,QAAQ,EAAEQ,CAAC,IAAIP,WAAW,CAACO,CAAC,CAACI,MAAF,CAASC,KAAV,CAA7D;AAAgF,MAAA,WAAW,EAAC;AAA5F;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,QAAQ,EAAGN,aAAjB;AAAA,8BACI;AAAA,kBAAIL;AAAJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,SAAxB;AAAkC,QAAA,QAAQ,EAAGS,aAA7C;AAA6D,QAAA,KAAK,EAAGb;AAArE;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOI;AAAA,gBAEQF,QAAQ,CAACkB,GAAT,CAAc,CAACC,IAAD,EAAOC,CAAP,kBACV;AAAA,mBAAYD,IAAI,CAACf,QAAjB,QAA6Be,IAAI,CAACjB,OAAlC;AAAA,SAAQkB,CAAR;AAAA;AAAA;AAAA;AAAA,cADJ;AAFR;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,kBADJ;AAiBH,CAjDD;;GAAMtB,I;;KAAAA,I;AAmDN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\n\nconst Chat = () => {\n    const [socket] = useState(() => io(':8000'))\n    const [messages, setMessages] = useState([]);\n    const [message, setMessage] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [typingStatus, setTypingStatus] = useState('');\n\n    useEffect(() => {\n        return () => socket.disconnect(true);\n    }, []);\n\n    socket.on('messageSent', data => {\n        setMessages([...messages, data]);\n        setTypingStatus('');\n    })\n\n    socket.on('clientTyping', data => {\n        setTypingStatus(data.message);\n    })\n\n    const submitHandler = e => {\n        e.preventDefault();\n\n        socket.emit('sendMessage', {username, message})\n        setTypingStatus('');\n        setMessage('');\n    }\n\n    const typingHandler = e => {\n        setMessage(e.target.value);\n        socket.emit('clientTyping', {message: `${username} is typing...`})\n    }\n    return (\n        <>\n            <input type=\"text\" name=\"username\" onChange={e => setUsername(e.target.value) } placeholder=\"username\"/>\n            <form onSubmit={ submitHandler }>\n                <p>{typingStatus}</p>\n                <input type=\"text\" name=\"message\" onChange={ typingHandler } value={ message }/>\n                <input type=\"submit\" value=\"Send\"/>\n            </form>\n            <div>\n                {\n                    messages.map( (item, i) => \n                        <p key={i}>{item.username}: {item.message}</p>\n                    )\n                }\n            </div>\n        </>\n    );\n}\n\nexport default Chat"]},"metadata":{},"sourceType":"module"}