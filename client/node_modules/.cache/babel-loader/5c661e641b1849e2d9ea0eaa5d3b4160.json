{"ast":null,"code":"var _jsxFileName = \"/Users/kellyle/Desktop/Dojo_Assignments/MERN/Neighbourly-1-main/Neighbourly/client/src/views/LoginRegister.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Component } from 'react';\nimport { navigate } from '@reach/router'; // import Map from './Map';\n\nimport MapOne from './MapOne'; // import GoogleFileMap from './GoogleFileMap';\n// import MapForm from './MapForm';\n\nimport { FormControl, InputLabel, OutlinedInput, Checkbox, Select, Button } from '@material-ui/core';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  paper: {\n    width: \"10rem\",\n    padding: \"1rem\"\n  },\n  input: {\n    marginBottom: \"1rem\"\n  },\n  button: {\n    width: \"50%\"\n  }\n};\nexport default _s(props => {\n  _s();\n\n  // *****************\n  const {\n    user,\n    Users\n  } = props;\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\"); // const [userName, setUserName]= useState(\"\");\n\n  const [email, setEmail] = useState(\"\");\n  const [logEmail, setLogEmail] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [logPassword, setLogPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [errors, setErrors] = useState({}); // ***********************************Login********************************************\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0;\n  }\n\n  ;\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    axios.post('http://localhost:8000/api/user/login', {\n      logEmail,\n      logPassword\n    }).then(response => {\n      console.log(response);\n\n      if (response.data.errors) {\n        setErrors(response.data.errors.errors);\n      } else {\n        navigate(\"/homepage\");\n      }\n    }).catch(err => console.log(err));\n  } // ******************************************************************************\n  // {console.log(\"**************************\")}\n\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    axios.post('http://localhost:8000/api/user', {\n      firstName,\n      lastName,\n      // userName,\n      email,\n      address,\n      password,\n      confirmPassword\n    }).then(response => {\n      if (response.data.errors) {\n        console.log(\"There is an error\");\n        setErrors(response.data.errors);\n      } else {\n        console.log(response);\n        console.log({\n          msg: \"success!\",\n          user: response\n        });\n        navigate(\"/homepage\");\n      }\n    }).catch(err => console.log(err));\n  }; // ********************************************************** Google MAP API******************************\n  // function initMap() {\n  //         axios.get (`https://maps.google.com/?cid=10281119596374313554`,)\n  //     const map = new google.maps.Map(document.getElementById(\"map\"), {\n  //         zoom: 8,\n  //         center: { lat: 35.717, lng: 139.731 },\n  //     });\n  // }\n  // function myMap() {\n  //     var mapProp = {\n  //         axios.get(`https://maps.google.com/?cid=10281119596374313554`)\n  //                 const map = new google.maps.Map(document.getElementById(\"googleMap\"), mapProp);\n  //         center: new google.maps.LatLng(51.508742, -0.120850),\n  //         zoom: 5,\n  //     };\n  // }\n  // ************************************************************************************************************\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    elevation: 1,\n    style: styles.paper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '5px',\n        width: '150%',\n        marginTop: '10px',\n        height: '100%',\n        padding: '2px'\n      },\n      children: /*#__PURE__*/_jsxDEV(MapOne, {\n        google: props.google,\n        center: {\n          lat: 47.628933,\n          lng: -122.343181\n        },\n        height: \"300px\",\n        zoom: 15\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Register\", JSON.stringify(firstName)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"outlined\",\n        style: styles.input,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          type: \"text\",\n          name: \"firstName\",\n          onChange: e => setFirstName(e.target.value),\n          value: firstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", errors.firstName ? errors.firstName.message : '', \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"outlined\",\n        style: styles.input,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          type: \"text\",\n          name: \"lastName\",\n          onChange: e => setLastName(e.target.value),\n          value: lastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", errors.lastName ? errors.lastName.message : '', \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"outlined\",\n        style: styles.input,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"E-mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          type: \"text\",\n          name: \"email\",\n          onChange: e => setEmail(e.target.value),\n          value: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", errors.email ? errors.email.message : '', \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"outlined\",\n        style: styles.input,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          type: \"password\",\n          name: \"password\",\n          onChange: e => setPassword(e.target.value),\n          value: password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", errors.password ? errors.password.message : '', \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"outlined\",\n        style: styles.input,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \" Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          type: \"password\",\n          name: \"Confirmpassword\",\n          onChange: e => setConfirmPassword(e.target.value),\n          value: confirmPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"outlined\",\n        style: styles.input,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          type: \"text\",\n          name: \"address\",\n          onChange: e => setAddress(e.target.value),\n          value: address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", errors.address ? errors.address.message : '', \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"outlined\",\n        style: styles.input,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          type: \"email\",\n          name: \"email\",\n          onChange: e => setLogEmail(e.target.value),\n          value: logEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"outlined\",\n        style: styles.input,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          type: \"password\",\n          name: \"password\",\n          onChange: e => setLogPassword(e.target.value),\n          value: logPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          label: \"I agree to the Terms and Conditions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 13\n  }, this);\n}, \"MzTum80C/lRt/QKb2aY3QUV8F9U=\");","map":{"version":3,"sources":["/Users/kellyle/Desktop/Dojo_Assignments/MERN/Neighbourly-1-main/Neighbourly/client/src/views/LoginRegister.js"],"names":["React","useState","Component","navigate","MapOne","FormControl","InputLabel","OutlinedInput","Checkbox","Select","Button","axios","styles","paper","width","padding","input","marginBottom","button","props","user","Users","firstName","setFirstName","lastName","setLastName","email","setEmail","logEmail","setLogEmail","address","setAddress","password","setPassword","logPassword","setLogPassword","confirmPassword","setConfirmPassword","errors","setErrors","validateForm","length","handleSubmit","event","preventDefault","post","then","response","console","log","data","catch","err","onSubmitHandler","e","msg","margin","marginTop","height","google","lat","lng","JSON","stringify","target","value","message"],"mappings":"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","sourcesContent":["import React, { useState, Component } from 'react';\nimport { navigate } from '@reach/router';\n// import Map from './Map';\nimport MapOne from './MapOne';\n// import GoogleFileMap from './GoogleFileMap';\n// import MapForm from './MapForm';\n\nimport {\n    FormControl,\n    InputLabel,\n    OutlinedInput,\n    Checkbox,\n    Select,\n    Button\n} from '@material-ui/core';\nimport axios from \"axios\";\nconst styles = {\n    paper: {\n        width: \"10rem\", padding: \"1rem\"\n    },\n    input: {\n        marginBottom: \"1rem\"\n    },\n    button: {\n        width: \"50%\"\n    }\n}\nexport default  (props)=> {\n    // *****************\n    const{user, Users}=props;\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    // const [userName, setUserName]= useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [logEmail, setLogEmail] = useState(\"\");\n    const [address, setAddress] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [logPassword, setLogPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [errors, setErrors] = useState({});\n\n// ***********************************Login********************************************\n        function validateForm() {\n            return email.length > 0 && password.length > 0;\n        };\n\n        function handleSubmit(event) {\n            event.preventDefault();\n            axios.post('http://localhost:8000/api/user/login',{\n                logEmail,\n                logPassword\n            })\n                .then(response => {\n                    console.log(response);\n                    if (response.data.errors) {\n                        setErrors(response.data.errors.errors)\n                    } else { navigate(\"/homepage\") }\n                })\n                .catch(err => console.log(err))\n        }\n// ******************************************************************************\n    // {console.log(\"**************************\")}\n    const onSubmitHandler = e => {\n        e.preventDefault();\n            axios.post('http://localhost:8000/api/user', {\n                firstName,\n                lastName,\n              // userName,\n                email,\n                address,\n                password,\n                confirmPassword\n            })\n            .then(response=> {\n                if (response.data.errors){\n                    console.log(\"There is an error\");\n                    setErrors(response.data.errors)\n                } else {\n                    console.log(response)\n                    console.log({ msg: \"success!\", user: response})\n                    navigate(\"/homepage\")\n                }\n            })\n            .catch(err => console.log(err))\n        };\n        // ********************************************************** Google MAP API******************************\n        // function initMap() {\n        //         axios.get (`https://maps.google.com/?cid=10281119596374313554`,)\n        //     const map = new google.maps.Map(document.getElementById(\"map\"), {\n        //         zoom: 8,\n        //         center: { lat: 35.717, lng: 139.731 },\n        //     });\n        // }\n\n// function myMap() {\n    //     var mapProp = {\n        //         axios.get(`https://maps.google.com/?cid=10281119596374313554`)\n        //                 const map = new google.maps.Map(document.getElementById(\"googleMap\"), mapProp);\n        //         center: new google.maps.LatLng(51.508742, -0.120850),\n        //         zoom: 5,\n        //     };\n        // }\n        \n        // ************************************************************************************************************\n        return (\n            <div  elevation={1} style={styles.paper}>\n        {/* *************************** */}\n{/* <Map/> */}\n<div style={{margin: '5px', width: '150%', marginTop:'10px', height: '100%', padding:'2px'}}>\n<MapOne \n            google={props.google}\n            center={{ lat: 47.628933, lng: -122.343181}}\n            height='300px'\n            zoom={15}/>\n            </div>\n\n        {/* <MapForm google={props.google}\n            center={{ lat: 47.628934, lng: -122.343181 }}\n            height='300px'\n            zoom={15}/> */}\n        {/* <GoogleFileMap /> */}\n        {/* <MapOne /> */}\n        {/* *************************** */}\n\n        <h2>Register{JSON.stringify(firstName)}</h2>\n        <form onSubmit = {onSubmitHandler}>\n            <FormControl variant=\"outlined\" style={styles.input}>\n                <InputLabel>First Name</InputLabel>\n                <OutlinedInput type=\"text\" name=\"firstName\" onChange={(e) => setFirstName(e.target.value)}\n                        value={firstName}/>\n            </FormControl>\n            <span > {errors.firstName ? errors.firstName.message : ''} </span>\n                <FormControl variant=\"outlined\" style={styles.input}>\n                    <InputLabel>Last Name</InputLabel>\n                <OutlinedInput type=\"text\" name=\"lastName\" onChange={(e) => setLastName(e.target.value)}\n                        value={lastName}/>\n                </FormControl>\n            <span > {errors.lastName ? errors.lastName.message : ''} </span>\n            <FormControl variant=\"outlined\" style={styles.input}>\n                <InputLabel>E-mail</InputLabel>\n                <OutlinedInput type=\"text\" name=\"email\" onChange={(e) => setEmail(e.target.value)}\n                    value={email} />\n            </FormControl>\n            <span > {errors.email ? errors.email.message : ''} </span>\n            <FormControl variant=\"outlined\" style={styles.input}>\n                <InputLabel>Password</InputLabel>\n                <OutlinedInput type=\"password\" name=\"password\" onChange={(e) => setPassword(e.target.value)}\n                        value={password} />\n            </FormControl>\n            <span > {errors.password ? errors.password.message : ''} </span>\n            <FormControl variant=\"outlined\" style={styles.input}>\n                <InputLabel> Confirm Password</InputLabel>\n                <OutlinedInput type=\"password\" name=\"Confirmpassword\" onChange={(e)=> setConfirmPassword(e.target.value)} value={confirmPassword}/>\n            </FormControl>\n            <FormControl variant=\"outlined\" style={styles.input}>\n                <InputLabel>Address</InputLabel>\n                <OutlinedInput type=\"text\" name=\"address\" onChange={(e) => setAddress(e.target.value)} value={address} />\n            </FormControl>\n            <span > {errors.address ? errors.address.message : ''} </span>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">Register\n            </Button>\n        </form>\n        <h2>Login</h2>\n        <form onSubmit={handleSubmit}>\n            <FormControl variant=\"outlined\" style={styles.input}>\n                <InputLabel>Email</InputLabel>\n                <OutlinedInput type=\"email\" name=\"email\" onChange={(e) => setLogEmail(e.target.value)} value={logEmail}/>\n            </FormControl>\n            <FormControl variant=\"outlined\" style={styles.input}>\n                <InputLabel>Password</InputLabel>\n                <OutlinedInput type=\"password\" name=\"password\" onChange={(e) => setLogPassword(e.target.value)}value={logPassword}/>\n            </FormControl>\n            <FormControl>\n                <Checkbox label='I agree to the Terms and Conditions'/>\n            </FormControl>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                Login\n            </Button>\n        </form>\n    </div>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}